"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-router-dom";
exports.ids = ["vendor-chunks/react-router-dom"];
exports.modules = {

/***/ "(rsc)/./node_modules/react-router-dom/node_modules/react-router/esm/react-router.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/react-router-dom/node_modules/react-router/esm/react-router.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MemoryRouter: () => (/* binding */ MemoryRouter),\n/* harmony export */   Prompt: () => (/* binding */ Prompt),\n/* harmony export */   Redirect: () => (/* binding */ Redirect),\n/* harmony export */   Route: () => (/* binding */ Route),\n/* harmony export */   Router: () => (/* binding */ Router),\n/* harmony export */   StaticRouter: () => (/* binding */ StaticRouter),\n/* harmony export */   Switch: () => (/* binding */ Switch),\n/* harmony export */   __HistoryContext: () => (/* binding */ historyContext),\n/* harmony export */   __RouterContext: () => (/* binding */ context),\n/* harmony export */   generatePath: () => (/* binding */ generatePath),\n/* harmony export */   matchPath: () => (/* binding */ matchPath),\n/* harmony export */   useHistory: () => (/* binding */ useHistory),\n/* harmony export */   useLocation: () => (/* binding */ useLocation),\n/* harmony export */   useParams: () => (/* binding */ useParams),\n/* harmony export */   useRouteMatch: () => (/* binding */ useRouteMatch),\n/* harmony export */   withRouter: () => (/* binding */ withRouter)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"(rsc)/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! prop-types */ \"(rsc)/./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var history__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! history */ \"(rsc)/./node_modules/history/esm/history.js\");\n/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tiny-warning */ \"(rsc)/./node_modules/tiny-warning/dist/tiny-warning.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tiny-invariant */ \"(rsc)/./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(rsc)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! path-to-regexp */ \"(rsc)/./node_modules/path-to-regexp/index.js\");\n/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(path_to_regexp__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-is */ \"(rsc)/./node_modules/react-is/index.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ \"(rsc)/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! hoist-non-react-statics */ \"(rsc)/./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_7__);\n\n\n\n\n\n\n\n\n\n\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823;\nvar commonjsGlobal = typeof globalThis !== \"undefined\" // 'global proper'\n ? globalThis :  false ? 0 // Browser\n : typeof global !== \"undefined\" ? global // node.js\n : {};\nfunction getUniqueId() {\n    var key = \"__global_unique_id__\";\n    return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;\n} // Inlined Object.is polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction objectIs(x, y) {\n    if (x === y) {\n        return x !== 0 || 1 / x === 1 / y;\n    } else {\n        // eslint-disable-next-line no-self-compare\n        return x !== x && y !== y;\n    }\n}\nfunction createEventEmitter(value) {\n    var handlers = [];\n    return {\n        on: function on(handler) {\n            handlers.push(handler);\n        },\n        off: function off(handler) {\n            handlers = handlers.filter(function(h) {\n                return h !== handler;\n            });\n        },\n        get: function get() {\n            return value;\n        },\n        set: function set(newValue, changedBits) {\n            value = newValue;\n            handlers.forEach(function(handler) {\n                return handler(value, changedBits);\n            });\n        }\n    };\n}\nfunction onlyChild(children) {\n    return Array.isArray(children) ? children[0] : children;\n}\nfunction createReactContext(defaultValue, calculateChangedBits) {\n    var _Provider$childContex, _Consumer$contextType;\n    var contextProp = \"__create-react-context-\" + getUniqueId() + \"__\";\n    var Provider = /*#__PURE__*/ function(_React$Component) {\n        (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Provider, _React$Component);\n        function Provider() {\n            var _this;\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            _this = _React$Component.call.apply(_React$Component, [\n                this\n            ].concat(args)) || this;\n            _this.emitter = createEventEmitter(_this.props.value);\n            return _this;\n        }\n        var _proto = Provider.prototype;\n        _proto.getChildContext = function getChildContext() {\n            var _ref;\n            return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n        };\n        _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n            if (this.props.value !== nextProps.value) {\n                var oldValue = this.props.value;\n                var newValue = nextProps.value;\n                var changedBits;\n                if (objectIs(oldValue, newValue)) {\n                    changedBits = 0; // No change\n                } else {\n                    changedBits = typeof calculateChangedBits === \"function\" ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n                    if (true) {\n                         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_8__[\"default\"])((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, \"calculateChangedBits: Expected the return value to be a \" + \"31-bit integer. Instead received: \" + changedBits) : 0;\n                    }\n                    changedBits |= 0;\n                    if (changedBits !== 0) {\n                        this.emitter.set(nextProps.value, changedBits);\n                    }\n                }\n            }\n        };\n        _proto.render = function render() {\n            return this.props.children;\n        };\n        return Provider;\n    }((react__WEBPACK_IMPORTED_MODULE_1___default().Component));\n    Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object).isRequired, _Provider$childContex);\n    var Consumer = /*#__PURE__*/ function(_React$Component2) {\n        (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Consumer, _React$Component2);\n        function Consumer() {\n            var _this2;\n            for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n                args[_key2] = arguments[_key2];\n            }\n            _this2 = _React$Component2.call.apply(_React$Component2, [\n                this\n            ].concat(args)) || this;\n            _this2.observedBits = void 0;\n            _this2.state = {\n                value: _this2.getValue()\n            };\n            _this2.onUpdate = function(newValue, changedBits) {\n                var observedBits = _this2.observedBits | 0;\n                if ((observedBits & changedBits) !== 0) {\n                    _this2.setState({\n                        value: _this2.getValue()\n                    });\n                }\n            };\n            return _this2;\n        }\n        var _proto2 = Consumer.prototype;\n        _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n            var observedBits = nextProps.observedBits;\n            this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n             : observedBits;\n        };\n        _proto2.componentDidMount = function componentDidMount() {\n            if (this.context[contextProp]) {\n                this.context[contextProp].on(this.onUpdate);\n            }\n            var observedBits = this.props.observedBits;\n            this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n             : observedBits;\n        };\n        _proto2.componentWillUnmount = function componentWillUnmount() {\n            if (this.context[contextProp]) {\n                this.context[contextProp].off(this.onUpdate);\n            }\n        };\n        _proto2.getValue = function getValue() {\n            if (this.context[contextProp]) {\n                return this.context[contextProp].get();\n            } else {\n                return defaultValue;\n            }\n        };\n        _proto2.render = function render() {\n            return onlyChild(this.props.children)(this.state.value);\n        };\n        return Consumer;\n    }((react__WEBPACK_IMPORTED_MODULE_1___default().Component));\n    Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object), _Consumer$contextType);\n    return {\n        Provider: Provider,\n        Consumer: Consumer\n    };\n}\n// MIT License\nvar createContext = (react__WEBPACK_IMPORTED_MODULE_1___default().createContext) || createReactContext;\n// TODO: Replace with React.createContext once we can assume React 16+\nvar createNamedContext = function createNamedContext(name) {\n    var context = createContext();\n    context.displayName = name;\n    return context;\n};\nvar historyContext = /*#__PURE__*/ createNamedContext(\"Router-History\");\nvar context = /*#__PURE__*/ createNamedContext(\"Router\");\n/**\n * The public API for putting history on context.\n */ var Router = /*#__PURE__*/ function(_React$Component) {\n    (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Router, _React$Component);\n    Router.computeRootMatch = function computeRootMatch(pathname) {\n        return {\n            path: \"/\",\n            url: \"/\",\n            params: {},\n            isExact: pathname === \"/\"\n        };\n    };\n    function Router(props) {\n        var _this;\n        _this = _React$Component.call(this, props) || this;\n        _this.state = {\n            location: props.history.location\n        }; // This is a bit of a hack. We have to start listening for location\n        // changes here in the constructor in case there are any <Redirect>s\n        // on the initial render. If there are, they will replace/push when\n        // they mount and since cDM fires in children before parents, we may\n        // get a new location before the <Router> is mounted.\n        _this._isMounted = false;\n        _this._pendingLocation = null;\n        if (!props.staticContext) {\n            _this.unlisten = props.history.listen(function(location) {\n                _this._pendingLocation = location;\n            });\n        }\n        return _this;\n    }\n    var _proto = Router.prototype;\n    _proto.componentDidMount = function componentDidMount() {\n        var _this2 = this;\n        this._isMounted = true;\n        if (this.unlisten) {\n            // Any pre-mount location changes have been captured at\n            // this point, so unregister the listener.\n            this.unlisten();\n        }\n        if (!this.props.staticContext) {\n            this.unlisten = this.props.history.listen(function(location) {\n                if (_this2._isMounted) {\n                    _this2.setState({\n                        location: location\n                    });\n                }\n            });\n        }\n        if (this._pendingLocation) {\n            this.setState({\n                location: this._pendingLocation\n            });\n        }\n    };\n    _proto.componentWillUnmount = function componentWillUnmount() {\n        if (this.unlisten) {\n            this.unlisten();\n            this._isMounted = false;\n            this._pendingLocation = null;\n        }\n    };\n    _proto.render = function render() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(context.Provider, {\n            value: {\n                history: this.props.history,\n                location: this.state.location,\n                match: Router.computeRootMatch(this.state.location.pathname),\n                staticContext: this.props.staticContext\n            }\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(historyContext.Provider, {\n            children: this.props.children || null,\n            value: this.props.history\n        }));\n    };\n    return Router;\n}((react__WEBPACK_IMPORTED_MODULE_1___default().Component));\nif (true) {\n    Router.propTypes = {\n        children: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().node),\n        history: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object).isRequired,\n        staticContext: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object)\n    };\n    Router.prototype.componentDidUpdate = function(prevProps) {\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(prevProps.history === this.props.history, \"You cannot change <Router history>\") : 0;\n    };\n}\n/**\n * The public API for a <Router> that stores location in memory.\n */ var MemoryRouter = /*#__PURE__*/ function(_React$Component) {\n    (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(MemoryRouter, _React$Component);\n    function MemoryRouter() {\n        var _this;\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this = _React$Component.call.apply(_React$Component, [\n            this\n        ].concat(args)) || this;\n        _this.history = (0,history__WEBPACK_IMPORTED_MODULE_10__.createMemoryHistory)(_this.props);\n        return _this;\n    }\n    var _proto = MemoryRouter.prototype;\n    _proto.render = function render() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Router, {\n            history: this.history,\n            children: this.props.children\n        });\n    };\n    return MemoryRouter;\n}((react__WEBPACK_IMPORTED_MODULE_1___default().Component));\nif (true) {\n    MemoryRouter.propTypes = {\n        initialEntries: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().array),\n        initialIndex: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().number),\n        getUserConfirmation: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().func),\n        keyLength: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().number),\n        children: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().node)\n    };\n    MemoryRouter.prototype.componentDidMount = function() {\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(!this.props.history, \"<MemoryRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { MemoryRouter as Router }`.\") : 0;\n    };\n}\nvar Lifecycle = /*#__PURE__*/ function(_React$Component) {\n    (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Lifecycle, _React$Component);\n    function Lifecycle() {\n        return _React$Component.apply(this, arguments) || this;\n    }\n    var _proto = Lifecycle.prototype;\n    _proto.componentDidMount = function componentDidMount() {\n        if (this.props.onMount) this.props.onMount.call(this, this);\n    };\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n        if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);\n    };\n    _proto.componentWillUnmount = function componentWillUnmount() {\n        if (this.props.onUnmount) this.props.onUnmount.call(this, this);\n    };\n    _proto.render = function render() {\n        return null;\n    };\n    return Lifecycle;\n}((react__WEBPACK_IMPORTED_MODULE_1___default().Component));\n/**\n * The public API for prompting the user before navigating away from a screen.\n */ function Prompt(_ref) {\n    var message = _ref.message, _ref$when = _ref.when, when = _ref$when === void 0 ? true : _ref$when;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(context.Consumer, null, function(context) {\n        !context ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, \"You should not use <Prompt> outside a <Router>\") : 0 : void 0;\n        if (!when || context.staticContext) return null;\n        var method = context.history.block;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Lifecycle, {\n            onMount: function onMount(self) {\n                self.release = method(message);\n            },\n            onUpdate: function onUpdate(self, prevProps) {\n                if (prevProps.message !== message) {\n                    self.release();\n                    self.release = method(message);\n                }\n            },\n            onUnmount: function onUnmount(self) {\n                self.release();\n            },\n            message: message\n        });\n    });\n}\nif (true) {\n    var messageType = prop_types__WEBPACK_IMPORTED_MODULE_9___default().oneOfType([\n        (prop_types__WEBPACK_IMPORTED_MODULE_9___default().func),\n        (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string)\n    ]);\n    Prompt.propTypes = {\n        when: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool),\n        message: messageType.isRequired\n    };\n}\nvar cache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\nfunction compilePath(path) {\n    if (cache[path]) return cache[path];\n    var generator = path_to_regexp__WEBPACK_IMPORTED_MODULE_4___default().compile(path);\n    if (cacheCount < cacheLimit) {\n        cache[path] = generator;\n        cacheCount++;\n    }\n    return generator;\n}\n/**\n * Public API for generating a URL pathname from a path and parameters.\n */ function generatePath(path, params) {\n    if (path === void 0) {\n        path = \"/\";\n    }\n    if (params === void 0) {\n        params = {};\n    }\n    return path === \"/\" ? path : compilePath(path)(params, {\n        pretty: true\n    });\n}\n/**\n * The public API for navigating programmatically with a component.\n */ function Redirect(_ref) {\n    var computedMatch = _ref.computedMatch, to = _ref.to, _ref$push = _ref.push, push = _ref$push === void 0 ? false : _ref$push;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(context.Consumer, null, function(context) {\n        !context ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, \"You should not use <Redirect> outside a <Router>\") : 0 : void 0;\n        var history = context.history, staticContext = context.staticContext;\n        var method = push ? history.push : history.replace;\n        var location = (0,history__WEBPACK_IMPORTED_MODULE_10__.createLocation)(computedMatch ? typeof to === \"string\" ? generatePath(to, computedMatch.params) : (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, to, {\n            pathname: generatePath(to.pathname, computedMatch.params)\n        }) : to); // When rendering in a static context,\n        // set the new location immediately.\n        if (staticContext) {\n            method(location);\n            return null;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Lifecycle, {\n            onMount: function onMount() {\n                method(location);\n            },\n            onUpdate: function onUpdate(self, prevProps) {\n                var prevLocation = (0,history__WEBPACK_IMPORTED_MODULE_10__.createLocation)(prevProps.to);\n                if (!(0,history__WEBPACK_IMPORTED_MODULE_10__.locationsAreEqual)(prevLocation, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, location, {\n                    key: prevLocation.key\n                }))) {\n                    method(location);\n                }\n            },\n            to: to\n        });\n    });\n}\nif (true) {\n    Redirect.propTypes = {\n        push: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool),\n        from: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),\n        to: prop_types__WEBPACK_IMPORTED_MODULE_9___default().oneOfType([\n            (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),\n            (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object)\n        ]).isRequired\n    };\n}\nvar cache$1 = {};\nvar cacheLimit$1 = 10000;\nvar cacheCount$1 = 0;\nfunction compilePath$1(path, options) {\n    var cacheKey = \"\" + options.end + options.strict + options.sensitive;\n    var pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});\n    if (pathCache[path]) return pathCache[path];\n    var keys = [];\n    var regexp = path_to_regexp__WEBPACK_IMPORTED_MODULE_4___default()(path, keys, options);\n    var result = {\n        regexp: regexp,\n        keys: keys\n    };\n    if (cacheCount$1 < cacheLimit$1) {\n        pathCache[path] = result;\n        cacheCount$1++;\n    }\n    return result;\n}\n/**\n * Public API for matching a URL pathname to a path.\n */ function matchPath(pathname, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    if (typeof options === \"string\" || Array.isArray(options)) {\n        options = {\n            path: options\n        };\n    }\n    var _options = options, path = _options.path, _options$exact = _options.exact, exact = _options$exact === void 0 ? false : _options$exact, _options$strict = _options.strict, strict = _options$strict === void 0 ? false : _options$strict, _options$sensitive = _options.sensitive, sensitive = _options$sensitive === void 0 ? false : _options$sensitive;\n    var paths = [].concat(path);\n    return paths.reduce(function(matched, path) {\n        if (!path && path !== \"\") return null;\n        if (matched) return matched;\n        var _compilePath = compilePath$1(path, {\n            end: exact,\n            strict: strict,\n            sensitive: sensitive\n        }), regexp = _compilePath.regexp, keys = _compilePath.keys;\n        var match = regexp.exec(pathname);\n        if (!match) return null;\n        var url = match[0], values = match.slice(1);\n        var isExact = pathname === url;\n        if (exact && !isExact) return null;\n        return {\n            path: path,\n            // the path used to match\n            url: path === \"/\" && url === \"\" ? \"/\" : url,\n            // the matched portion of the URL\n            isExact: isExact,\n            // whether or not we matched exactly\n            params: keys.reduce(function(memo, key, index) {\n                memo[key.name] = values[index];\n                return memo;\n            }, {})\n        };\n    }, null);\n}\nfunction isEmptyChildren(children) {\n    return react__WEBPACK_IMPORTED_MODULE_1___default().Children.count(children) === 0;\n}\nfunction evalChildrenDev(children, props, path) {\n    var value = children(props);\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(value !== undefined, \"You returned `undefined` from the `children` function of \" + (\"<Route\" + (path ? ' path=\"' + path + '\"' : \"\") + \">, but you \") + \"should have returned a React element or `null`\") : 0;\n    return value || null;\n}\n/**\n * The public API for matching a single path and rendering.\n */ var Route = /*#__PURE__*/ function(_React$Component) {\n    (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Route, _React$Component);\n    function Route() {\n        return _React$Component.apply(this, arguments) || this;\n    }\n    var _proto = Route.prototype;\n    _proto.render = function render() {\n        var _this = this;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(context.Consumer, null, function(context$1) {\n            !context$1 ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, \"You should not use <Route> outside a <Router>\") : 0 : void 0;\n            var location = _this.props.location || context$1.location;\n            var match = _this.props.computedMatch ? _this.props.computedMatch // <Switch> already computed the match for us\n             : _this.props.path ? matchPath(location.pathname, _this.props) : context$1.match;\n            var props = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, context$1, {\n                location: location,\n                match: match\n            });\n            var _this$props = _this.props, children = _this$props.children, component = _this$props.component, render = _this$props.render; // Preact uses an empty array as children by\n            // default, so use null if that's the case.\n            if (Array.isArray(children) && isEmptyChildren(children)) {\n                children = null;\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(context.Provider, {\n                value: props\n            }, props.match ? children ? typeof children === \"function\" ?  true ? evalChildrenDev(children, props, _this.props.path) : 0 : children : component ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(component, props) : render ? render(props) : null : typeof children === \"function\" ?  true ? evalChildrenDev(children, props, _this.props.path) : 0 : null);\n        });\n    };\n    return Route;\n}((react__WEBPACK_IMPORTED_MODULE_1___default().Component));\nif (true) {\n    Route.propTypes = {\n        children: prop_types__WEBPACK_IMPORTED_MODULE_9___default().oneOfType([\n            (prop_types__WEBPACK_IMPORTED_MODULE_9___default().func),\n            (prop_types__WEBPACK_IMPORTED_MODULE_9___default().node)\n        ]),\n        component: function component(props, propName) {\n            if (props[propName] && !(0,react_is__WEBPACK_IMPORTED_MODULE_5__.isValidElementType)(props[propName])) {\n                return new Error(\"Invalid prop 'component' supplied to 'Route': the prop is not a valid React component\");\n            }\n        },\n        exact: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool),\n        location: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object),\n        path: prop_types__WEBPACK_IMPORTED_MODULE_9___default().oneOfType([\n            (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),\n            prop_types__WEBPACK_IMPORTED_MODULE_9___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_9___default().string))\n        ]),\n        render: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().func),\n        sensitive: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool),\n        strict: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool)\n    };\n    Route.prototype.componentDidMount = function() {\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.component), \"You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored\") : 0;\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.render), \"You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored\") : 0;\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(!(this.props.component && this.props.render), \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\") : 0;\n    };\n    Route.prototype.componentDidUpdate = function(prevProps) {\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(!(this.props.location && !prevProps.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.') : 0;\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(!(!this.props.location && prevProps.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.') : 0;\n    };\n}\nfunction addLeadingSlash(path) {\n    return path.charAt(0) === \"/\" ? path : \"/\" + path;\n}\nfunction addBasename(basename, location) {\n    if (!basename) return location;\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, location, {\n        pathname: addLeadingSlash(basename) + location.pathname\n    });\n}\nfunction stripBasename(basename, location) {\n    if (!basename) return location;\n    var base = addLeadingSlash(basename);\n    if (location.pathname.indexOf(base) !== 0) return location;\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, location, {\n        pathname: location.pathname.substr(base.length)\n    });\n}\nfunction createURL(location) {\n    return typeof location === \"string\" ? location : (0,history__WEBPACK_IMPORTED_MODULE_10__.createPath)(location);\n}\nfunction staticHandler(methodName) {\n    return function() {\n         true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, \"You cannot %s with <StaticRouter>\", methodName) : 0;\n    };\n}\nfunction noop() {}\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */ var StaticRouter = /*#__PURE__*/ function(_React$Component) {\n    (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(StaticRouter, _React$Component);\n    function StaticRouter() {\n        var _this;\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this = _React$Component.call.apply(_React$Component, [\n            this\n        ].concat(args)) || this;\n        _this.handlePush = function(location) {\n            return _this.navigateTo(location, \"PUSH\");\n        };\n        _this.handleReplace = function(location) {\n            return _this.navigateTo(location, \"REPLACE\");\n        };\n        _this.handleListen = function() {\n            return noop;\n        };\n        _this.handleBlock = function() {\n            return noop;\n        };\n        return _this;\n    }\n    var _proto = StaticRouter.prototype;\n    _proto.navigateTo = function navigateTo(location, action) {\n        var _this$props = this.props, _this$props$basename = _this$props.basename, basename = _this$props$basename === void 0 ? \"\" : _this$props$basename, _this$props$context = _this$props.context, context = _this$props$context === void 0 ? {} : _this$props$context;\n        context.action = action;\n        context.location = addBasename(basename, (0,history__WEBPACK_IMPORTED_MODULE_10__.createLocation)(location));\n        context.url = createURL(context.location);\n    };\n    _proto.render = function render() {\n        var _this$props2 = this.props, _this$props2$basename = _this$props2.basename, basename = _this$props2$basename === void 0 ? \"\" : _this$props2$basename, _this$props2$context = _this$props2.context, context = _this$props2$context === void 0 ? {} : _this$props2$context, _this$props2$location = _this$props2.location, location = _this$props2$location === void 0 ? \"/\" : _this$props2$location, rest = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(_this$props2, [\n            \"basename\",\n            \"context\",\n            \"location\"\n        ]);\n        var history = {\n            createHref: function createHref(path) {\n                return addLeadingSlash(basename + createURL(path));\n            },\n            action: \"POP\",\n            location: stripBasename(basename, (0,history__WEBPACK_IMPORTED_MODULE_10__.createLocation)(location)),\n            push: this.handlePush,\n            replace: this.handleReplace,\n            go: staticHandler(\"go\"),\n            goBack: staticHandler(\"goBack\"),\n            goForward: staticHandler(\"goForward\"),\n            listen: this.handleListen,\n            block: this.handleBlock\n        };\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Router, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, rest, {\n            history: history,\n            staticContext: context\n        }));\n    };\n    return StaticRouter;\n}((react__WEBPACK_IMPORTED_MODULE_1___default().Component));\nif (true) {\n    StaticRouter.propTypes = {\n        basename: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),\n        context: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object),\n        location: prop_types__WEBPACK_IMPORTED_MODULE_9___default().oneOfType([\n            (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),\n            (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object)\n        ])\n    };\n    StaticRouter.prototype.componentDidMount = function() {\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(!this.props.history, \"<StaticRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { StaticRouter as Router }`.\") : 0;\n    };\n}\n/**\n * The public API for rendering the first <Route> that matches.\n */ var Switch = /*#__PURE__*/ function(_React$Component) {\n    (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Switch, _React$Component);\n    function Switch() {\n        return _React$Component.apply(this, arguments) || this;\n    }\n    var _proto = Switch.prototype;\n    _proto.render = function render() {\n        var _this = this;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(context.Consumer, null, function(context) {\n            !context ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, \"You should not use <Switch> outside a <Router>\") : 0 : void 0;\n            var location = _this.props.location || context.location;\n            var element, match; // We use React.Children.forEach instead of React.Children.toArray().find()\n            // here because toArray adds keys to all child elements and we do not want\n            // to trigger an unmount/remount for two <Route>s that render the same\n            // component at different URLs.\n            react__WEBPACK_IMPORTED_MODULE_1___default().Children.forEach(_this.props.children, function(child) {\n                if (match == null && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().isValidElement(child)) {\n                    element = child;\n                    var path = child.props.path || child.props.from;\n                    match = path ? matchPath(location.pathname, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, child.props, {\n                        path: path\n                    })) : context.match;\n                }\n            });\n            return match ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().cloneElement(element, {\n                location: location,\n                computedMatch: match\n            }) : null;\n        });\n    };\n    return Switch;\n}((react__WEBPACK_IMPORTED_MODULE_1___default().Component));\nif (true) {\n    Switch.propTypes = {\n        children: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().node),\n        location: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object)\n    };\n    Switch.prototype.componentDidUpdate = function(prevProps) {\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(!(this.props.location && !prevProps.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.') : 0;\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(!(!this.props.location && prevProps.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.') : 0;\n    };\n}\n/**\n * A public higher-order component to access the imperative API\n */ function withRouter(Component) {\n    var displayName = \"withRouter(\" + (Component.displayName || Component.name) + \")\";\n    var C = function C(props) {\n        var wrappedComponentRef = props.wrappedComponentRef, remainingProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(props, [\n            \"wrappedComponentRef\"\n        ]);\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(context.Consumer, null, function(context) {\n            !context ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, \"You should not use <\" + displayName + \" /> outside a <Router>\") : 0 : void 0;\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Component, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, remainingProps, context, {\n                ref: wrappedComponentRef\n            }));\n        });\n    };\n    C.displayName = displayName;\n    C.WrappedComponent = Component;\n    if (true) {\n        C.propTypes = {\n            wrappedComponentRef: prop_types__WEBPACK_IMPORTED_MODULE_9___default().oneOfType([\n                (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),\n                (prop_types__WEBPACK_IMPORTED_MODULE_9___default().func),\n                (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object)\n            ])\n        };\n    }\n    return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_7___default()(C, Component);\n}\nvar useContext = (react__WEBPACK_IMPORTED_MODULE_1___default().useContext);\nfunction useHistory() {\n    if (true) {\n        !(typeof useContext === \"function\") ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, \"You must use React >= 16.8 in order to use useHistory()\") : 0 : void 0;\n    }\n    return useContext(historyContext);\n}\nfunction useLocation() {\n    if (true) {\n        !(typeof useContext === \"function\") ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, \"You must use React >= 16.8 in order to use useLocation()\") : 0 : void 0;\n    }\n    return useContext(context).location;\n}\nfunction useParams() {\n    if (true) {\n        !(typeof useContext === \"function\") ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, \"You must use React >= 16.8 in order to use useParams()\") : 0 : void 0;\n    }\n    var match = useContext(context).match;\n    return match ? match.params : {};\n}\nfunction useRouteMatch(path) {\n    if (true) {\n        !(typeof useContext === \"function\") ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, \"You must use React >= 16.8 in order to use useRouteMatch()\") : 0 : void 0;\n    }\n    var location = useLocation();\n    var match = useContext(context).match;\n    return path ? matchPath(location.pathname, path) : match;\n}\nif (true) {\n    if (false) { var secondaryBuildName, initialBuildName, buildNames, key, global$1; }\n}\n //# sourceMappingURL=react-router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/react-router-dom/node_modules/react-router/esm/react-router.js\n");

/***/ })

};
;